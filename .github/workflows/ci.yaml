on:
  push:
    branches:
      - main
    tags:
      - "*"
  pull_request:

name: CI
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # make sure all code has been formatted with rustfmt
      - name: check rustfmt
        run: |
          rustup component add rustfmt
          cargo fmt -- --check --color always
      # run clippy to verify we have no warnings
      - run: cargo fetch
      - name: cargo clippy
        run: |
          rustup component add clippy
          cargo clippy --all-targets --all-features -- -D warnings
  test:
    name: Test
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - run: cargo fetch
      - name: cargo test build
        # Note the use of release here means longer compile time, but much
        # faster test execution time. If you don't have any heavy tests it
        # might be faster to take off release and just compile in debug
        run: cargo build --tests --release
      - name: cargo test
        run: cargo test --release

  release:
    name: Release
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest]
        include:
          - os: ubuntu-latest
            rust: stable
            target: x86_64-unknown-linux-musl
            bin: forger
          - os: macOS-latest
            rust: stable
            target: x86_64-apple-darwin
            bin: forger
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          target: ${{ matrix.target }}
      - name: Install musl tools
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y pkg-config musl-tools libssl-dev
      - name: Checkout
        uses: actions/checkout@v2
      - run: cargo fetch --target ${{ matrix.target }}
      - name: Release build
        shell: bash
        run: |
          cargo build --release --target ${{ matrix.target }}
      - name: Package
        shell: bash
        run: |
          name=forger
          tag=$(git describe --tags --abbrev=0)
          release_name="$name-$tag-${{ matrix.target }}"
          release_tar="${release_name}.tar.gz"
          mkdir "$release_name"
          cp "target/${{ matrix.target }}/release/${{ matrix.bin }}" "$release_name/"
          cp README.md "$release_name/"
          tar czvf "$release_tar" "$release_name"
          rm -r "$release_name"
          echo -n "$(shasum -ba 256 "${release_tar}" | cut -d " " -f 1)" > "${release_tar}.sha256"
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: "forger*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
